#define IRPORT IN_1
#define COMPASSPORT IN_2
#define BTN BTN4

#define LEFT OUT_B
#define RIGHT OUT_C
#define BOTH OUT_BC

#define TURNPWR 5

#define MAX 80
#define MIN (-40)

mutex moveMutex;

float m = (MAX-MIN)/2;
int bleft = -(MAX-MIN)/2 * 4;
int bright = (MAX-MIN)/2 * 6;

int dir;
int s[9]; //s1, s3, s5, s7, s9;
int proximity;

int POWER = -80;

inline void readSeekerArray(byte& dir, byte& s[]) {
  byte s1,s2,s3,s4,s5;
  ReadSensorHTIRSeeker2AC(IRPORT, dir, s1,s2,s3,s4,s5);
  s[0]=s1;
  s[1]=0; //(s1+s2);
  s[2]=s2;
  s[3]=0; //(s2+s3);
  s[4]=s3;
  s[5]=0; //(s3+s4);
  s[6]=s4;
  s[7]=0; //(s4+s5);
  s[8]=s5;
}

// Check sensors task - this task is responsible for calibrating the robot headings
// and check the sensors along the way
task check_sensors(){
  ClearScreen();

  while(true){
    readSeekerArray(dir, s);

    proximity=ArrayMax(s,NA,NA);
    if (proximity <100)
      proximity = 100;
    if (proximity > 170)
      proximity = 170;

    ClearLine(LCD_LINE1);
    ClearLine(LCD_LINE2);
    ClearLine(LCD_LINE3);
    ClearLine(LCD_LINE4);
    ClearLine(LCD_LINE5);
    ClearLine(LCD_LINE6);
    ClearLine(LCD_LINE7);
    NumOut(60,LCD_LINE1,dir);
    NumOut(60,LCD_LINE2,s[0]);
    NumOut(60,LCD_LINE3,s[2]);
    NumOut(60,LCD_LINE4,s[4]);
    NumOut(60,LCD_LINE5,s[6]);
    NumOut(60,LCD_LINE6,s[8]);
    NumOut(60,LCD_LINE7,proximity);
  }
}

task go_forward(){
  Acquire(moveMutex);
  OnFwdReg(BOTH,-90,OUT_REGMODE_SYNC);
  Wait(3000);
  Off(BOTH);
  Release(moveMutex);
}

// task seek_ball(){
//   int lpower, rpower;

//   while(true){
//     lpower=(m*dir+bleft);
//     rpower=(-m*dir+bright);
//     if (lpower>MAX){
//       lpower=MAX;
//     }
//     if (lpower<MIN){
//       lpower=MIN;
//     }
//     if (rpower>MAX){
//       rpower=MAX;
//     }
//     if (rpower<MIN){
//       rpower=MIN;
//     }
//     Acquire(moveMutex);
//     OnFwd(LEFT,-lpower*200/proximity);
//     OnFwd(RIGHT,-rpower*200/proximity);
//     // OnFwd(LEFT,-40);
//     // OnRev(RIGHT,-40);
//     Release(moveMutex);
//   }
// }
task seek_ball(){
  while(true){
    while(dir > 5){
      Acquire(moveMutex);
      OnFwd(LEFT,-(40 + TURNPWR * proximity / 255));
      OnRev(RIGHT,-(40 + TURNPWR * proximity / 255));
      // OnFwd(LEFT,-40);
      // OnRev(RIGHT,-40);
      Release(moveMutex);
    }
    while(dir < 5){
      Acquire(moveMutex);
      OnFwd(RIGHT,-(40 + TURNPWR * proximity / 255));
      OnRev(LEFT,-(40 + TURNPWR * proximity / 255));
      // OnFwd(RIGHT,-40);
      // OnRev(LEFT,-40);
      Release(moveMutex);
    }
    while(dir == 5){
      Acquire(moveMutex);
      OnFwdReg(BOTH,-80,OUT_REGMODE_SYNC);
      Release(moveMutex);
    }
  }
}

task main(){
  // Configure sensor ports
  SetSensorLowspeed(IRPORT);
  
  // Start all tasks
  Precedes(check_sensors, seek_ball);
}
